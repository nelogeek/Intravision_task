@{
    ViewData["Title"] = "Readme";
}
<h1>@ViewData["Title"]</h1>


<div class="container">
    <h1 class="mt-5 mb-4">Описание проекта</h1>
    <p>Проект представляет собой веб-приложение, моделирующее работу автомата по продаже напитков. Веб-приложение разработано с использованием ASP.NET Core и Razor Page, а также использует Bootstrap для стилизации интерфейса.</p>

    <h2 class="mt-4">Архитектура</h2>
    <p>Проект построен на архитектурном паттерне MVC (Model-View-Controller).</p>

    <h2 class="mt-4">Функциональность пользовательского интерфейса</h2>
    <ul>
        <li>Внесение суммы монетами различного номинала.</li>
        <li>Выбор напитка из списка доступных напитков.</li>
        <li>Покупка напитка при условии, что пользователь внес достаточную сумму.</li>
        <li>Получение сдачи, если пользователь внес сумму больше стоимости выбранного напитка.</li>
    </ul>

    <h2 class="mt-4">Функциональность административного интерфейса</h2>
    <ul>
        <li>Управление ассортиментом напитков: добавление, удаление, редактирование.</li>
        <li>Управление количеством монет в автомате: изменение количества монет, блокирование приема определенных номиналов монет.</li>
        <li>Доступ к административному интерфейсу осуществляется по секретному ключу, передаваемому в адресной строке (пароль от админки "123" - лежит в appsettings.json).</li>
    </ul>

    <h2 class="mt-4">Хранение данных</h2>
    <p>Для хранения данных о напитках и монетах используется БД MS SQL. Взаимодействие с БД реализовано через подход "Code First" с помощью Entity Framework Core.</p>

    <h2 class="mt-4">Необязательные требования</h2>
    <p>Также выполнены оба необязательных требования:</p>
    <ul>
        <li>Возможность импорта напитков.</li>
        <li>Возможность покупки нескольких напитков перед получением сдачи.</li>
    </ul>

    <hr/>
    <p>drinks.json - файл для импорта напитков</p>
</div>