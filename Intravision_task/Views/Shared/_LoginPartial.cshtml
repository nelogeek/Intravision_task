@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager



<ul class="navbar-nav gap-md-4">
    <hr class="bg-danger border-1 border-top border-dark mt-0 mb-0" />
    @if (User.Identity.IsAuthenticated)
    {
        <li class="nav-item">
            <p id="userName" class="nav-link text-dark">
                @User.Identity.Name
            </p>
        </li>
        <li class="nav-item" id="logout">
            <form id="logoutForm" class="form-inline" asp-area="" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0 d-flex align-items-center">
                    <span class="material-symbols-outlined" id="logout-icon">
                        log out
                    </span>
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="" asp-controller="Account" asp-action="Login" asp-route-returnUrl="@Url.Action("Index", "Machine", new { area = "" })">Log In</a>
        </li>
    }
</ul>

